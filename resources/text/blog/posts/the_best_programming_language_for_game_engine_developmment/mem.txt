As an unmanaged programming language, memory management in C++ is different from other managed programming languages such as Java and C#, in which it does not have Garbage Collector (GC), dynamic memory is not managed automatically and we could get the memory leak issue if not deallocate dynamic memory.

Besides, the unmanaged memory functionalities in C++ are also crucial to high performance software. Due to its complexity, the general memory allocator implementation for multiple purposes is usually not efficient and indeed can cost high performance. Thus, most modern C++ game engines use custom memory allocators with different memory management mechanisms for specific purposes. For instance, they often implement the frame allocator that basically allocates memory by increasing the memory usage inside the allocated memory chunks every allocations and only deallocates memory at the end of frame.